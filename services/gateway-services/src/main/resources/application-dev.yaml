spring:
  cloud:
    gateway:
      routes:
        - id: emr-user-services
          uri: lb://emr-user-services/api/user-services/**
          predicates:
            - Path=/api/user-services/**
          filters:
            - name: UserServicesFilter

        - id: emr-booking-services
          uri : lb://emr-booking-services/api/booking-services/**
          predicates:
            - Path=/api/booking-services/**
          filters:
            - name: GeneralServicesFilter

        - id: emr-department-services
          uri: lb://emr-department-services/api/department-services/**
          predicates:
            - Path=/api/department-services/**
          filters:
            - name: GeneralServicesFilter

        - id: emr-emr-services
          uri: lb://emr-emr-services/api/emr-services/**
          predicates:
            - Path=/api/emr-services/**
          filters:
            - name: GeneralServicesFilter

        - id: emr-evaluation-services
          uri: lb://emr-evaluation-services/api/evaluation-services/**
          predicates:
            - Path=/api/evaluation-services/**
          filters:
            - name: GeneralServicesFilter

        - id: emr-notice-services
          uri: lb://emr-notice-services/api/notice-services/**
          predicates:
            - Path=/api/notice-services/**
          filters:
            - name: GeneralServicesFilter

        - id: emr-registration-services
          uri: lb://emr-registration-services/api/registration-services/**
          predicates:
            - Path=/api/registration-services/**
          filters:
            - name: GeneralServicesFilter
emr:
  general-services:
    path-permissions:
    #预约时间表
      # 创建预约时间
      "/api/booking-services/v1/create": ["root","doctor","admin"]
      #根据id删除预约时间表
      "/api/booking-services/v1/delete": ["root","doctor","admin"]
      #更新预约时间表
      "/api/booking-services/v1/update": ["root","doctor","admin"]
      #根据id查询时间表
      "/api/booking-services/v1/queryById": ["root","doctor","patient","admin"]
      #根据医生id查询时间表
      "/api/booking-services/v1/queryByDoctorId": ["root","doctor","patient","admin"]
      "/api/booking-services/v1/pageQuery": ["root","admin","doctor","patient"]
    #科室管理
      #新增科室
      "/api/department-services/v1/create": ["root","admin"]
      #删除科室
      "/api/department-services/v1/delete": ["root","admin"]
      #更新科室
      "/api/department-services/v1/update": ["root","admin"]
      #根据id查询科室
      "/api/department-services/v1/queryById": ["root","admin","doctor","patient"]
      #查询所有科室
      "/api/department-services/v1/queryAll": ["root","admin","doctor","patient","guest"]
    #病历管理
      #新增病历
      "/api/emr-services/v1/create": ["root","doctor"]
      #删掉病历
      "/api/emr-services/v1/delete": ["root","doctor","patient"]
      #更新病历
      "/api/emr-services/v1/update": ["root","doctor"]
      #id查询病历
      "/api/emr-services/v1/queryById": ["root","doctor","admin","patient"]
    #就诊评价
      #新增评价
      "/api/evaluation-services/v1/create": ["root","patient"]
      #删除评价
      "/api/evaluation-services/v1/delete": ["root","patient"]
      #id 查询
      "/api/evaluation-services/v1/queryById": ["root","patient","admin","doctor"]
      # 病历id查询
      "/api/evaluation-services/v1/queryByEmrId" : ["root","patient","admin","doctor"]
    #公告管理
      #新增公告
      "/api/notice-services/v1/create": ["root","admin"]
      # 删除
      "/api/notice-services/v1/delete": ["root","admin"]
      #改
      "/api/notice-services/v1/update": ["root","admin"]
      #查询
      "/api/notice-services/v1/queryById": ["root","admin","doctor","patient","guest"]
    #挂号管理
      #新增挂号
      "/api/registration-services/v1/create": ["root","patient"]
      #删除挂号
      "/api/registration-services/v1/delete": ["root","patient"]
      #修改挂号
      "/api/registration-services/v1/update": ["root","patient"]
      #id 查询
      "/api/registration-services/v1/queryById": ["root","admin","patient","doctor"]
      #完成挂号
      "/api/registration-services/v1/finish": ["root","admin","patient","doctor"]

    # 是否启用严格模式(未明确配置的路径将被拒绝)
    strict-mode: true
  user-services:
    path-permissions:
      # 操作userType中多分出一个root，被操纵userType中都是admin
      # root有admin的全部权限，普通admin并没有注册、和注销的权限
      # root的注销权限在user-services代码中写死禁止了
      "root":
        # root有admin全部权限 ，登录权限都是只有访客的
        "admin":   ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username","/api/user-services/v1/register","/api/user-services/v1/update","/api/user-services/v1/deletion",                              "/api/user-services/v1/check-login","/api/user-services/v1/logout",'/api/user-services/v1/updatePassword']
        # root 有doctor全部权限
        "doctor":  ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username","/api/user-services/v1/register","/api/user-services/v1/update","/api/user-services/v1/deletion",                              "/api/user-services/v1/check-login","/api/user-services/v1/logout"]
        # root 不可以注册patient账户
        "patient": ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username",                                 "/api/user-services/v1/update","/api/user-services/v1/deletion",                             "/api/user-services/v1/check-login","/api/user-services/v1/logout"]
        # 如果前端无法获取被操作用户类型，设为guest
        "guest": ["/api/user-services/v1/getUserInfoByToken"]
      "admin":
        # admin 不能注册和注销admin账户
        "admin":   ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username",                                 "/api/user-services/v1/update",                                                               "/api/user-services/v1/check-login","/api/user-services/v1/logout",'/api/user-services/v1/updatePassword']
        # admin 拥有doctor全部权限 但是不能注销doctor
        "doctor":  ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username","/api/user-services/v1/register","/api/user-services/v1/update",                                                               "/api/user-services/v1/check-login","/api/user-services/v1/logout"]
        # admin  不能注册和注销patient
        "patient": ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username",                                 "/api/user-services/v1/update","/api/user-services/v1/deletion",                              "/api/user-services/v1/check-login","/api/user-services/v1/logout"]
        "guest": ["/api/user-services/v1/getUserInfoByToken"]
       # 医生只有自己的全部权限和查看用户
        # 医生账户不能自行注册，只有管理员可以注册医生账户
      "doctor":
         # 医生有自己的全部权限 但是不能注册和注销自己
        "doctor":  ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username",                                  "/api/user-services/v1/update",                                                              "/api/user-services/v1/check-login","/api/user-services/v1/logout",'/api/user-services/v1/updatePassword']
        # doctor 只有查询患者的相关权限
        "patient": ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username",                                                                                                                               "/api/user-services/v1/check-login","/api/user-services/v1/logout"]
        "guest": ["/api/user-services/v1/getUserInfoByToken"]
      # 患者只有自己的全部功能和查看医生信息
      "patient":
        # patient 只能查询doctor 不能查询未加密信息
        "doctor":  ["/api/user-services/v1/page","/api/user-services/v1/query",                                    "/api/user-services/v1/has-username",                                                                                                                               "/api/user-services/v1/check-login","/api/user-services/v1/logout"]
        # patient 有自己的全部权限
        "patient": ["/api/user-services/v1/page","/api/user-services/v1/query","/api/user-services/v1/actualQuery","/api/user-services/v1/has-username","/api/user-services/v1/register","/api/user-services/v1/update","/api/user-services/v1/deletion",                              "/api/user-services/v1/check-login","/api/user-services/v1/logout",'/api/user-services/v1/updatePassword']
        "guest": ["/api/user-services/v1/page","/api/user-services/v1/getUserInfoByToken"]
      # 登录权限只对guest开放
      # guest可以注册patient账户
      "guest":
        "admin":   ["/api/user-services/v1/login","/api/user-services/v1/check-login"]
        "doctor":  ["/api/user-services/v1/login","/api/user-services/v1/check-login"]
        "patient": ["/api/user-services/v1/login","/api/user-services/v1/has-username","/api/user-services/v1/register","/api/user-services/v1/check-login"]
        "guest": ["/api/user-services/v1/getUserInfoByToken"]
    # 是否启用严格模式(未明确配置的路径将被拒绝)
    strict-mode: true

